x-common-environment: &common-environment
  POSTGRES_HOST: $POSTGRES_HOST
  POSTGRES_DB: $POSTGRES_DB
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD

  DATABASE_URL: postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST/$POSTGRES_DB

services:
  postgres-update:
    image: tianon/postgres-upgrade:16-to-17
    profiles:
      - postgres-upgrade
    volumes:
      - pg_data16:/var/lib/postgresql/16/data
      - pg_data17:/var/lib/postgresql/17/data
    environment:
      <<: *common-environment
    command: bash -c "apt update -y && apt install -y postgresql-16-postgis-3 postgresql-17-postgis-3 && su postgres -c pg_upgrade"

  postgres:
    image: postgis/postgis:17-master
    volumes:
      - pg_data17:/var/lib/postgresql/data
    environment:
      <<: *common-environment
    # command: postgres -c log_statement=all -c log_destination=stderr
    healthcheck:
      test: pg_isready
      start_interval: 1s
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  cache:
    image: redis:7
    healthcheck:
      test: redis-cli --raw incr ping
      start_interval: 1s
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  directus:
    build:
      context: docker/directus/
    image: ghcr.io/teritorio/elasa-directus:master
    ports:
      - 8055:8055
    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./uploads:/directus/uploads
      # If you want to load extensions from the host
      - ./docker/directus/extensions:/directus/extensions
    depends_on:
      - cache
      - postgres
    environment:
      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'

      DB_CLIENT: 'pg'
      DB_HOST: $POSTGRES_HOST
      DB_PORT: '5432'
      DB_DATABASE: $POSTGRES_DB
      DB_USER: $POSTGRES_USER
      DB_PASSWORD: $POSTGRES_PASSWORD

      CACHE_ENABLED: 'false'
      # CACHE_STORE: redis
      # CACHE_REDIS: redis://cache:6379

      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}

      EMAIL_TRANSPORT: smtp
      EMAIL_SMTP_HOST: ${DIRECTUS_SMTP_HOST:-}
      EMAIL_SMTP_PORT: ${DIRECTUS_SMTP_PORT:-}
      EMAIL_SMTP_USER: ${DIRECTUS_SMTP_USER:-}
      EMAIL_SMTP_PASSWORD: ${DIRECTUS_SMTP_PASSWORD:-}
      EMAIL_SMTP_POOL: true
      EMAIL_SMTP_SECURE: ${DIRECTUS_SMTP_SECURE:-}
      EMAIL_FROM: ${DIRECTUS_EMAIL_FROM:-}

      # Make sure to set this in production
      # (see https://docs.directus.io/reference/environment-variables/#general)
      PUBLIC_URL: $DIRECTUS_PUBLIC_URL
      EXTENSIONS_AUTO_RELOAD: ${DIRECTUS_EXTENSIONS_AUTO_RELOAD}
    restart: unless-stopped

  script:
    profiles:
      - tools
    build:
      context: .
    image: ghcr.io/teritorio/elasa-api:master
    environment:
      <<: *common-environment
      # RAILS_ENV: ${RAILS_ENV:-production}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-Toe8eihai5ieShai}
      DATASOURCES_URL: ${DATASOURCES_URL}
      SENTRY_DSN_TOOLS: ${SENTRY_DSN_TOOLS}
      SENTRY_DSN_API: ${SENTRY_DSN_API}
    volumes:
      - ./:/srv/app/
    depends_on:
      - postgres
    healthcheck:
      disable: true

  api:
    build:
      context: .
    image: ghcr.io/teritorio/elasa-api:master
    environment:
      <<: *common-environment
      # RAILS_ENV: ${RAILS_ENV:-production}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-Toe8eihai5ieShai}
      DATASOURCES_URL: ${DATASOURCES_URL}
      SENTRY_DSN_TOOLS: ${SENTRY_DSN_TOOLS}
      SENTRY_DSN_API: ${SENTRY_DSN_API}
    ports:
      - 12000:12000
    volumes:
      - ./:/srv/app/
    depends_on:
      - postgres
    command: bundle exec rails server --pid /dev/shm/server.pid --binding=0.0.0.0 --port 12000
    restart: unless-stopped

  swagger:
    image: swaggerapi/swagger-ui:v5.29.0
    environment:
      EMBEDDING: true
      BASE_URL: /api/0.1/swagger-ui
      SWAGGER_JSON_URL: /static/elasa-0.1.swagger.yaml
    volumes:
      - ./public/static/elasa-0.1.swagger.yaml:/etc/nginx/html/static/elasa-0.1.swagger.yaml:ro
    ports:
      - 12001:8080
    healthcheck:
      test: curl -f http://localhost:8080/api/0.1/swagger-ui || exit 1
      start_interval: 1s
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  pg_data16:
  pg_data17:
